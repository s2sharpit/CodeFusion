// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  username      String    @unique
  bio           String?
  skills        String[]
  projects      Project[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  username      String
  owner         User     @relation(fields: [username], references: [username])
  title         String?
  description   String?
  repo          String   @unique
  // images        String[]
  topics        String[]
  languages     String[]
  likes         String[]
  demoVid       String?
  // collaborators Collaborator[]
  collaborators String[]
}

type Collaborator {
  username String
  role     String
}

model CollaborationRequest {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  SenderUserID    String @db.ObjectId
  RecipientUserID String @db.ObjectId
  Status          String
  Details         String
}
